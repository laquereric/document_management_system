namespace :cicd_security do
  desc "Disable authentication for CI/CD environments"
  task disable: :environment do
    cicd_security_file = Rails.root.join("config", "initializers", "cicd_security.rb")

    # Create the initializer file with CiCdSecurityDisable = true
    File.write(cicd_security_file, <<~RUBY)
      # This file is auto-generated by rake task cicd_security:disable
      # It disables authentication for CI/CD environments
      # To re-enable authentication, run: rake cicd_security:enable

      CiCdSecurityDisable = true
    RUBY

    puts "✅ Authentication disabled for CI/CD environment"
    puts "📁 Created: #{cicd_security_file}"
    puts "🔒 Users will not be required to authenticate"
    puts ""
    puts "To re-enable authentication, run: rake cicd_security:enable"
  end

  desc "Enable authentication (remove CI/CD security bypass)"
  task enable: :environment do
    cicd_security_file = Rails.root.join("config", "initializers", "cicd_security.rb")

    if File.exist?(cicd_security_file)
      File.delete(cicd_security_file)
      puts "✅ Authentication re-enabled"
      puts "🗑️  Removed: #{cicd_security_file}"
      puts "🔐 Users will now be required to authenticate"
    else
      puts "ℹ️  Authentication is already enabled"
      puts "📁 No security bypass file found at: #{cicd_security_file}"
    end
  end

  desc "Check current CI/CD security status"
  task status: :environment do
    cicd_security_file = Rails.root.join("config", "initializers", "cicd_security.rb")

    if File.exist?(cicd_security_file)
      puts "🔴 CI/CD Security: DISABLED"
      puts "📁 File exists: #{cicd_security_file}"
      puts "🔒 Users are NOT required to authenticate"
      puts ""
      puts "To enable authentication, run: rake cicd_security:enable"
    else
      puts "🟢 CI/CD Security: ENABLED"
      puts "📁 No bypass file found"
      puts "🔐 Users ARE required to authenticate"
      puts ""
      puts "To disable authentication, run: rake cicd_security:disable"
    end
  end
end
